server:
    port: 8060

spring:
    profiles:
        default: dev
    mvc:
        pathmatch:
            matching-strategy: ant_path_matcher
        view:
            prefix: /WEB-INF/view/
            suffix: .jsp

    security:
        oauth2:
            client:
                registration:
                    kakao:
                        client-id: f8ae067dc6798972969cd650aca79d01
                        client-secret: u8FZ07hOCRzzLlr2QbVgHVnp5MeCSSuo
                        redirect-uri: ${varialbles.beUri}/login/oauth2/code/kakao
                        authorization-grant-type: authorization_code
                        client-authentication-method: POST
                        client-name: Kakao
                        scope:
                            - profile_nickname
                            - account_email
                provider:
                    kakao:
                        authorization-uri: https://kauth.kakao.com/oauth/authorize
                        token-uri: https://kauth.kakao.com/oauth/token
                        user-info-uri: https://kapi.kakao.com/v2/user/me
                        user-name-attribute: id
    data:
        redis:
            host: localhost # 로컬에서 테스트 할 때는 localhost, 아니면 redis로 사용
            port: 6379
            password: 123456

logging.level:
    org.hibernate.SQL : info


servlet:
    session:
        timeout: 300m

social:
    client:
        kakao:
            rest-api-key: e055ec3f8a5c059c7530d94ddda9a6bd
            secret-key: f0ifHhoCMvifvGlExw6WDpvqZOtvf8CB
            #      redirect-uri: http://localhost:8082/api/user
            redirect-uri: http://localhost:3000
            grant_type: authorization_code
jwt:
    secret: secret12345secret12345secret12345secret12345secret12345secret12345secret12345secret12345secret12345secret12345secret12345


